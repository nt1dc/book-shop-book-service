import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.3.0"
}

group = 'se.nt1dc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
    maven { url "https://packages.confluent.io/maven" }
}

ext {
    set('springCloudVersion', "2022.0.1")
}
project.ext.set("avroVersion", "1.11.0")

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper:modelmapper:2.1.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    kafka
    implementation 'org.springframework.kafka:spring-kafka'

//    avro
    implementation group: 'org.apache.avro', name: 'avro', version: '1.11.0'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
    implementation group: 'io.confluent', name: 'kafka-schema-registry-client', version: '5.3.0'


//    quartz
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.quartz-scheduler:quartz:2.3.2'
//    database
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
//
//configurations {
//    all*.exclude module : 'spring-boot-starter-logging'
////    all*.exclude module : 'logback-classic'
//}